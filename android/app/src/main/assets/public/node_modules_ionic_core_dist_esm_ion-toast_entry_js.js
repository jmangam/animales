"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-toast_entry_js"],{

/***/ 8268:
/*!**************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-toast.entry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_toast": () => (/* binding */ Toast)
/* harmony export */ });
/* harmony import */ var C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-8e692445.js */ 1559);
/* harmony import */ var _ionic_global_c95cf239_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ionic-global-c95cf239.js */ 8607);
/* harmony import */ var _overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./overlays-87c7c7cb.js */ 2752);
/* harmony import */ var _index_dff497fb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-dff497fb.js */ 1652);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./theme-7670341c.js */ 320);
/* harmony import */ var _animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./animation-2c50d24d.js */ 631);
/* harmony import */ var _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers-3b390e48.js */ 9234);
/* harmony import */ var _hardware_back_button_490df115_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./hardware-back-button-490df115.js */ 159);
/* harmony import */ var _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-33ffec25.js */ 2286);


/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */









/**
 * iOS Toast Enter Animation
 */

const iosEnterAnimation = (baseEl, position) => {
  const baseAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const wrapperAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const root = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_7__.g)(baseEl);
  const wrapperEl = root.querySelector('.toast-wrapper');
  const bottom = `calc(-10px - var(--ion-safe-area-bottom, 0px))`;
  const top = `calc(10px + var(--ion-safe-area-top, 0px))`;
  wrapperAnimation.addElement(wrapperEl);

  switch (position) {
    case 'top':
      wrapperAnimation.fromTo('transform', 'translateY(-100%)', `translateY(${top})`);
      break;

    case 'middle':
      const topPosition = Math.floor(baseEl.clientHeight / 2 - wrapperEl.clientHeight / 2);
      wrapperEl.style.top = `${topPosition}px`;
      wrapperAnimation.fromTo('opacity', 0.01, 1);
      break;

    default:
      wrapperAnimation.fromTo('transform', 'translateY(100%)', `translateY(${bottom})`);
      break;
  }

  return baseAnimation.easing('cubic-bezier(.155,1.105,.295,1.12)').duration(400).addAnimation(wrapperAnimation);
};
/**
 * iOS Toast Leave Animation
 */


const iosLeaveAnimation = (baseEl, position) => {
  const baseAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const wrapperAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const root = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_7__.g)(baseEl);
  const wrapperEl = root.querySelector('.toast-wrapper');
  const bottom = `calc(-10px - var(--ion-safe-area-bottom, 0px))`;
  const top = `calc(10px + var(--ion-safe-area-top, 0px))`;
  wrapperAnimation.addElement(wrapperEl);

  switch (position) {
    case 'top':
      wrapperAnimation.fromTo('transform', `translateY(${top})`, 'translateY(-100%)');
      break;

    case 'middle':
      wrapperAnimation.fromTo('opacity', 0.99, 0);
      break;

    default:
      wrapperAnimation.fromTo('transform', `translateY(${bottom})`, 'translateY(100%)');
      break;
  }

  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(300).addAnimation(wrapperAnimation);
};
/**
 * MD Toast Enter Animation
 */


const mdEnterAnimation = (baseEl, position) => {
  const baseAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const wrapperAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const root = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_7__.g)(baseEl);
  const wrapperEl = root.querySelector('.toast-wrapper');
  const bottom = `calc(8px + var(--ion-safe-area-bottom, 0px))`;
  const top = `calc(8px + var(--ion-safe-area-top, 0px))`;
  wrapperAnimation.addElement(wrapperEl);

  switch (position) {
    case 'top':
      wrapperEl.style.top = top;
      wrapperAnimation.fromTo('opacity', 0.01, 1);
      break;

    case 'middle':
      const topPosition = Math.floor(baseEl.clientHeight / 2 - wrapperEl.clientHeight / 2);
      wrapperEl.style.top = `${topPosition}px`;
      wrapperAnimation.fromTo('opacity', 0.01, 1);
      break;

    default:
      wrapperEl.style.bottom = bottom;
      wrapperAnimation.fromTo('opacity', 0.01, 1);
      break;
  }

  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation(wrapperAnimation);
};
/**
 * md Toast Leave Animation
 */


const mdLeaveAnimation = baseEl => {
  const baseAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const wrapperAnimation = (0,_animation_2c50d24d_js__WEBPACK_IMPORTED_MODULE_6__.c)();
  const root = (0,_helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_7__.g)(baseEl);
  const wrapperEl = root.querySelector('.toast-wrapper');
  wrapperAnimation.addElement(wrapperEl).fromTo('opacity', 0.99, 0);
  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(300).addAnimation(wrapperAnimation);
};

const toastIosCss = ":host{--border-width:0;--border-style:none;--border-color:initial;--box-shadow:none;--min-width:auto;--width:auto;--min-height:auto;--height:auto;--max-height:auto;--white-space:normal;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;color:var(--color);font-family:var(--ion-font-family, inherit);contain:strict;z-index:1001;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host(.overlay-hidden){display:none}:host(.ion-color){--button-color:inherit;color:var(--ion-color-contrast)}:host(.ion-color) .toast-button-cancel{color:inherit}:host(.ion-color) .toast-wrapper{background:var(--ion-color-base)}.toast-wrapper{border-radius:var(--border-radius);left:var(--start);right:var(--end);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}[dir=rtl] .toast-wrapper,:host-context([dir=rtl]) .toast-wrapper{left:unset;right:unset;left:var(--end);right:var(--start)}.toast-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;pointer-events:auto;height:inherit;min-height:inherit;max-height:inherit;contain:content}.toast-content{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.toast-icon{margin-left:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-icon{margin-left:unset;-webkit-margin-start:16px;margin-inline-start:16px}}.toast-message{-ms-flex:1;flex:1;white-space:var(--white-space)}.toast-button-group{display:-ms-flexbox;display:flex}.toast-button{border:0;outline:none;color:var(--button-color);z-index:0}.toast-icon,.toast-button-icon{font-size:1.4em}.toast-button-inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (any-hover: hover){.toast-button:hover{cursor:pointer}}:host{--background:var(--ion-color-step-50, #f2f2f2);--border-radius:14px;--button-color:var(--ion-color-primary, #3880ff);--color:var(--ion-color-step-850, #262626);--max-width:700px;--start:10px;--end:10px;font-size:14px}.toast-wrapper{margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;display:block;position:absolute;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-wrapper{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-backdrop-filter: blur(0)) or (backdrop-filter: blur(0))){:host(.toast-translucent) .toast-wrapper{background:rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}.toast-wrapper.toast-top{-webkit-transform:translate3d(0,  -100%,  0);transform:translate3d(0,  -100%,  0);top:0}.toast-wrapper.toast-middle{opacity:0.01}.toast-wrapper.toast-bottom{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);bottom:0}.toast-content{padding-left:15px;padding-right:15px;padding-top:15px;padding-bottom:15px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-content{padding-left:unset;padding-right:unset;-webkit-padding-start:15px;padding-inline-start:15px;-webkit-padding-end:15px;padding-inline-end:15px}}.toast-header{margin-bottom:2px;font-weight:500}.toast-button{padding-left:15px;padding-right:15px;padding-top:10px;padding-bottom:10px;height:44px;-webkit-transition:background-color, opacity 100ms linear;transition:background-color, opacity 100ms linear;border:0;background-color:transparent;font-family:var(--ion-font-family);font-size:17px;font-weight:500;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-button{padding-left:unset;padding-right:unset;-webkit-padding-start:15px;padding-inline-start:15px;-webkit-padding-end:15px;padding-inline-end:15px}}.toast-button.ion-activated{opacity:0.4}@media (any-hover: hover){.toast-button:hover{opacity:0.6}}";
const toastMdCss = ":host{--border-width:0;--border-style:none;--border-color:initial;--box-shadow:none;--min-width:auto;--width:auto;--min-height:auto;--height:auto;--max-height:auto;--white-space:normal;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;color:var(--color);font-family:var(--ion-font-family, inherit);contain:strict;z-index:1001;pointer-events:none}:host-context([dir=rtl]){left:unset;right:unset;right:0}:host(.overlay-hidden){display:none}:host(.ion-color){--button-color:inherit;color:var(--ion-color-contrast)}:host(.ion-color) .toast-button-cancel{color:inherit}:host(.ion-color) .toast-wrapper{background:var(--ion-color-base)}.toast-wrapper{border-radius:var(--border-radius);left:var(--start);right:var(--end);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}[dir=rtl] .toast-wrapper,:host-context([dir=rtl]) .toast-wrapper{left:unset;right:unset;left:var(--end);right:var(--start)}.toast-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;pointer-events:auto;height:inherit;min-height:inherit;max-height:inherit;contain:content}.toast-content{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.toast-icon{margin-left:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-icon{margin-left:unset;-webkit-margin-start:16px;margin-inline-start:16px}}.toast-message{-ms-flex:1;flex:1;white-space:var(--white-space)}.toast-button-group{display:-ms-flexbox;display:flex}.toast-button{border:0;outline:none;color:var(--button-color);z-index:0}.toast-icon,.toast-button-icon{font-size:1.4em}.toast-button-inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (any-hover: hover){.toast-button:hover{cursor:pointer}}:host{--background:var(--ion-color-step-800, #333333);--border-radius:4px;--box-shadow:0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);--button-color:var(--ion-color-primary, #3880ff);--color:var(--ion-color-step-50, #f2f2f2);--max-width:700px;--start:8px;--end:8px;font-size:14px}.toast-wrapper{margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;display:block;position:absolute;opacity:0.01;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-wrapper{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.toast-content{padding-left:16px;padding-right:16px;padding-top:14px;padding-bottom:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-content{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.toast-header{margin-bottom:2px;font-weight:500;line-height:20px}.toast-message{line-height:20px}.toast-button-group-start{margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-button-group-start{margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}.toast-button-group-end{margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-button-group-end{margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}.toast-button{padding-left:15px;padding-right:15px;padding-top:10px;padding-bottom:10px;position:relative;background-color:transparent;font-family:var(--ion-font-family);font-size:14px;font-weight:500;letter-spacing:0.84px;text-transform:uppercase;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-button{padding-left:unset;padding-right:unset;-webkit-padding-start:15px;padding-inline-start:15px;-webkit-padding-end:15px;padding-inline-end:15px}}.toast-button-cancel{color:var(--ion-color-step-100, #e6e6e6)}.toast-button-icon-only{border-radius:50%;padding-left:9px;padding-right:9px;padding-top:9px;padding-bottom:9px;width:36px;height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.toast-button-icon-only{padding-left:unset;padding-right:unset;-webkit-padding-start:9px;padding-inline-start:9px;-webkit-padding-end:9px;padding-inline-end:9px}}@media (any-hover: hover){.toast-button:hover{background-color:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.08)}.toast-button-cancel:hover{background-color:rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.08)}}";
const Toast = class {
  constructor(hostRef) {
    (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.didPresent = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionToastDidPresent", 7);
    this.willPresent = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionToastWillPresent", 7);
    this.willDismiss = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionToastWillDismiss", 7);
    this.didDismiss = (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionToastDidDismiss", 7);
    this.presented = false;
    /**
     * How many milliseconds to wait before hiding the toast. By default, it will show
     * until `dismiss()` is called.
     */

    this.duration = 0;
    /**
     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.
     */

    this.keyboardClose = false;
    /**
     * The position of the toast on the screen.
     */

    this.position = 'bottom';
    /**
     * If `true`, the toast will be translucent.
     * Only applies when the mode is `"ios"` and the device supports
     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).
     */

    this.translucent = false;
    /**
     * If `true`, the toast will animate.
     */

    this.animated = true;

    this.dispatchCancelHandler = ev => {
      const role = ev.detail.role;

      if ((0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.i)(role)) {
        const cancelButton = this.getButtons().find(b => b.role === 'cancel');
        this.callButtonHandler(cancelButton);
      }
    };
  }

  connectedCallback() {
    (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.e)(this.el);
  }
  /**
   * Present the toast overlay after it has been created.
   */


  present() {
    var _this = this;

    return (0,C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.d)(_this, 'toastEnter', iosEnterAnimation, mdEnterAnimation, _this.position);

      if (_this.duration > 0) {
        _this.durationTimeout = setTimeout(() => _this.dismiss(undefined, 'timeout'), _this.duration);
      }
    })();
  }
  /**
   * Dismiss the toast overlay after it has been presented.
   *
   * @param data Any data to emit in the dismiss events.
   * @param role The role of the element that is dismissing the toast.
   * This can be useful in a button handler for determining which button was
   * clicked to dismiss the toast.
   * Some examples include: ``"cancel"`, `"destructive"`, "selected"`, and `"backdrop"`.
   */


  dismiss(data, role) {
    if (this.durationTimeout) {
      clearTimeout(this.durationTimeout);
    }

    return (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.f)(this, data, role, 'toastLeave', iosLeaveAnimation, mdLeaveAnimation, this.position);
  }
  /**
   * Returns a promise that resolves when the toast did dismiss.
   */


  onDidDismiss() {
    return (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.el, 'ionToastDidDismiss');
  }
  /**
   * Returns a promise that resolves when the toast will dismiss.
   */


  onWillDismiss() {
    return (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.el, 'ionToastWillDismiss');
  }

  getButtons() {
    const buttons = this.buttons ? this.buttons.map(b => {
      return typeof b === 'string' ? {
        text: b
      } : b;
    }) : [];
    return buttons;
  }

  buttonClick(button) {
    var _this2 = this;

    return (0,C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const role = button.role;

      if ((0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.i)(role)) {
        return _this2.dismiss(undefined, role);
      }

      const shouldDismiss = yield _this2.callButtonHandler(button);

      if (shouldDismiss) {
        return _this2.dismiss(undefined, role);
      }

      return Promise.resolve();
    })();
  }

  callButtonHandler(button) {
    return (0,C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (button === null || button === void 0 ? void 0 : button.handler) {
        // a handler has been provided, execute it
        // pass the handler the values from the inputs
        try {
          const rtn = yield (0,_overlays_87c7c7cb_js__WEBPACK_IMPORTED_MODULE_3__.s)(button.handler);

          if (rtn === false) {
            // if the return value of the handler is false then do not dismiss
            return false;
          }
        } catch (e) {
          console.error(e);
        }
      }

      return true;
    })();
  }

  renderButtons(buttons, side) {
    if (buttons.length === 0) {
      return;
    }

    const mode = (0,_ionic_global_c95cf239_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
    const buttonGroupsClasses = {
      'toast-button-group': true,
      [`toast-button-group-${side}`]: true
    };
    return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: buttonGroupsClasses
    }, buttons.map(b => (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      type: "button",
      class: buttonClass(b),
      tabIndex: 0,
      onClick: () => this.buttonClick(b),
      part: "button"
    }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "toast-button-inner"
    }, b.icon && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      icon: b.icon,
      slot: b.text === undefined ? 'icon-only' : undefined,
      class: "toast-button-icon"
    }), b.text), mode === 'md' && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-ripple-effect", {
      type: b.icon !== undefined && b.text === undefined ? 'unbounded' : 'bounded'
    }))));
  }

  render() {
    const allButtons = this.getButtons();
    const startButtons = allButtons.filter(b => b.side === 'start');
    const endButtons = allButtons.filter(b => b.side !== 'start');
    const mode = (0,_ionic_global_c95cf239_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
    const wrapperClass = {
      'toast-wrapper': true,
      [`toast-${this.position}`]: true
    };
    const role = allButtons.length > 0 ? 'dialog' : 'status';
    return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.H, Object.assign({
      "aria-live": "polite",
      "aria-atomic": "true",
      role: role,
      tabindex: "-1"
    }, this.htmlAttributes, {
      style: {
        zIndex: `${60000 + this.overlayIndex}`
      },
      class: (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__.c)(this.color, Object.assign(Object.assign({
        [mode]: true
      }, (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.cssClass)), {
        'overlay-hidden': true,
        'toast-translucent': this.translucent
      })),
      onIonToastWillDismiss: this.dispatchCancelHandler
    }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: wrapperClass
    }, (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "toast-container",
      part: "container"
    }, this.renderButtons(startButtons, 'start'), this.icon !== undefined && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-icon", {
      class: "toast-icon",
      part: "icon",
      icon: this.icon,
      lazy: false,
      "aria-hidden": "true"
    }), (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "toast-content"
    }, this.header !== undefined && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "toast-header",
      part: "header"
    }, this.header), this.message !== undefined && (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "toast-message",
      part: "message",
      innerHTML: (0,_index_dff497fb_js__WEBPACK_IMPORTED_MODULE_4__.s)(this.message)
    })), this.renderButtons(endButtons, 'end'))));
  }

  get el() {
    return (0,_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
  }

};

const buttonClass = button => {
  return Object.assign({
    'toast-button': true,
    'toast-button-icon-only': button.icon !== undefined && button.text === undefined,
    [`toast-button-${button.role}`]: button.role !== undefined,
    'ion-focusable': true,
    'ion-activatable': true
  }, (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__.g)(button.cssClass));
};

Toast.style = {
  ios: toastIosCss,
  md: toastMdCss
};


/***/ }),

/***/ 320:
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/theme-7670341c.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createColorClasses),
/* harmony export */   "g": () => (/* binding */ getClassMap),
/* harmony export */   "h": () => (/* binding */ hostContext),
/* harmony export */   "o": () => (/* binding */ openURL)
/* harmony export */ });
/* harmony import */ var C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);


/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */
const hostContext = (selector, el) => {
  return el.closest(selector) !== null;
};
/**
 * Create the mode and color classes for the component based on the classes passed in
 */


const createColorClasses = (color, cssClassMap) => {
  return typeof color === 'string' && color.length > 0 ? Object.assign({
    'ion-color': true,
    [`ion-color-${color}`]: true
  }, cssClassMap) : cssClassMap;
};

const getClassList = classes => {
  if (classes !== undefined) {
    const array = Array.isArray(classes) ? classes : classes.split(' ');
    return array.filter(c => c != null).map(c => c.trim()).filter(c => c !== '');
  }

  return [];
};

const getClassMap = classes => {
  const map = {};
  getClassList(classes).forEach(c => map[c] = true);
  return map;
};

const SCHEME = /^[a-z][a-z0-9+\-.]*:/;

const openURL = /*#__PURE__*/function () {
  var _ref = (0,C_Users_2DAW_Documents_ionic_animales_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (url, ev, direction, animation) {
    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {
      const router = document.querySelector('ion-router');

      if (router) {
        if (ev != null) {
          ev.preventDefault();
        }

        return router.push(url, direction, animation);
      }
    }

    return false;
  });

  return function openURL(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXRvYXN0X2VudHJ5X2pzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTTJCLGlCQUFpQixHQUFHLENBQUNDLE1BQUQsRUFBU0MsUUFBVCxLQUFzQjtFQUM5QyxNQUFNQyxhQUFhLEdBQUdMLHlEQUFlLEVBQXJDO0VBQ0EsTUFBTU0sZ0JBQWdCLEdBQUdOLHlEQUFlLEVBQXhDO0VBQ0EsTUFBTU8sSUFBSSxHQUFHTix1REFBYyxDQUFDRSxNQUFELENBQTNCO0VBQ0EsTUFBTUssU0FBUyxHQUFHRCxJQUFJLENBQUNFLGFBQUwsQ0FBbUIsZ0JBQW5CLENBQWxCO0VBQ0EsTUFBTUMsTUFBTSxHQUFJLGdEQUFoQjtFQUNBLE1BQU1DLEdBQUcsR0FBSSw0Q0FBYjtFQUNBTCxnQkFBZ0IsQ0FBQ00sVUFBakIsQ0FBNEJKLFNBQTVCOztFQUNBLFFBQVFKLFFBQVI7SUFDRSxLQUFLLEtBQUw7TUFDRUUsZ0JBQWdCLENBQUNPLE1BQWpCLENBQXdCLFdBQXhCLEVBQXFDLG1CQUFyQyxFQUEyRCxjQUFhRixHQUFJLEdBQTVFO01BQ0E7O0lBQ0YsS0FBSyxRQUFMO01BQ0UsTUFBTUcsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV2IsTUFBTSxDQUFDYyxZQUFQLEdBQXNCLENBQXRCLEdBQTBCVCxTQUFTLENBQUNTLFlBQVYsR0FBeUIsQ0FBOUQsQ0FBcEI7TUFDQVQsU0FBUyxDQUFDVSxLQUFWLENBQWdCUCxHQUFoQixHQUF1QixHQUFFRyxXQUFZLElBQXJDO01BQ0FSLGdCQUFnQixDQUFDTyxNQUFqQixDQUF3QixTQUF4QixFQUFtQyxJQUFuQyxFQUF5QyxDQUF6QztNQUNBOztJQUNGO01BQ0VQLGdCQUFnQixDQUFDTyxNQUFq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bS9pb24tdG9hc3QuZW50cnkuanMiLCIuL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS90aGVtZS03NjcwMzQxYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBlIGFzIGNyZWF0ZUV2ZW50LCBoLCBIIGFzIEhvc3QsIGkgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtOGU2OTI0NDUuanMnO1xuaW1wb3J0IHsgYiBhcyBnZXRJb25Nb2RlIH0gZnJvbSAnLi9pb25pYy1nbG9iYWwtYzk1Y2YyMzkuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0NhbmNlbCwgZSBhcyBwcmVwYXJlT3ZlcmxheSwgZCBhcyBwcmVzZW50LCBmIGFzIGRpc21pc3MsIGcgYXMgZXZlbnRNZXRob2QsIHMgYXMgc2FmZUNhbGwgfSBmcm9tICcuL292ZXJsYXlzLTg3YzdjN2NiLmpzJztcbmltcG9ydCB7IHMgYXMgc2FuaXRpemVET01TdHJpbmcgfSBmcm9tICcuL2luZGV4LWRmZjQ5N2ZiLmpzJztcbmltcG9ydCB7IGcgYXMgZ2V0Q2xhc3NNYXAsIGMgYXMgY3JlYXRlQ29sb3JDbGFzc2VzIH0gZnJvbSAnLi90aGVtZS03NjcwMzQxYy5qcyc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUFuaW1hdGlvbiB9IGZyb20gJy4vYW5pbWF0aW9uLTJjNTBkMjRkLmpzJztcbmltcG9ydCB7IGcgYXMgZ2V0RWxlbWVudFJvb3QgfSBmcm9tICcuL2hlbHBlcnMtM2IzOTBlNDguanMnO1xuaW1wb3J0ICcuL2hhcmR3YXJlLWJhY2stYnV0dG9uLTQ5MGRmMTE1LmpzJztcbmltcG9ydCAnLi9pbmRleC0zM2ZmZWMyNS5qcyc7XG5cbi8qKlxuICogaU9TIFRvYXN0IEVudGVyIEFuaW1hdGlvblxuICovXG5jb25zdCBpb3NFbnRlckFuaW1hdGlvbiA9IChiYXNlRWwsIHBvc2l0aW9uKSA9PiB7XG4gIGNvbnN0IGJhc2VBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgY29uc3Qgd3JhcHBlckFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjb25zdCByb290ID0gZ2V0RWxlbWVudFJvb3QoYmFzZUVsKTtcbiAgY29uc3Qgd3JhcHBlckVsID0gcm9vdC5xdWVyeVNlbGVjdG9yKCcudG9hc3Qtd3JhcHBlcicpO1xuICBjb25zdCBib3R0b20gPSBgY2FsYygtMTBweCAtIHZhcigtLWlvbi1zYWZlLWFyZWEtYm90dG9tLCAwcHgpKWA7XG4gIGNvbnN0IHRvcCA9IGBjYWxjKDEwcHggKyB2YXIoLS1pb24tc2FmZS1hcmVhLXRvcCwgMHB4KSlgO1xuICB3cmFwcGVyQW5pbWF0aW9uLmFkZEVsZW1lbnQod3JhcHBlckVsKTtcbiAgc3dpdGNoIChwb3NpdGlvbikge1xuICAgIGNhc2UgJ3RvcCc6XG4gICAgICB3cmFwcGVyQW5pbWF0aW9uLmZyb21UbygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZVkoLTEwMCUpJywgYHRyYW5zbGF0ZVkoJHt0b3B9KWApO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbWlkZGxlJzpcbiAgICAgIGNvbnN0IHRvcFBvc2l0aW9uID0gTWF0aC5mbG9vcihiYXNlRWwuY2xpZW50SGVpZ2h0IC8gMiAtIHdyYXBwZXJFbC5jbGllbnRIZWlnaHQgLyAyKTtcbiAgICAgIHdyYXBwZXJFbC5zdHlsZS50b3AgPSBgJHt0b3BQb3NpdGlvbn1weGA7XG4gICAgICB3cmFwcGVyQW5pbWF0aW9uLmZyb21Ubygnb3BhY2l0eScsIDAuMDEsIDEpO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHdyYXBwZXJBbmltYXRpb24uZnJvbVRvKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlWSgxMDAlKScsIGB0cmFuc2xhdGVZKCR7Ym90dG9tfSlgKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBiYXNlQW5pbWF0aW9uLmVhc2luZygnY3ViaWMtYmV6aWVyKC4xNTUsMS4xMDUsLjI5NSwxLjEyKScpLmR1cmF0aW9uKDQwMCkuYWRkQW5pbWF0aW9uKHdyYXBwZXJBbmltYXRpb24pO1xufTtcblxuLyoqXG4gKiBpT1MgVG9hc3QgTGVhdmUgQW5pbWF0aW9uXG4gKi9cbmNvbnN0IGlvc0xlYXZlQW5pbWF0aW9uID0gKGJhc2VFbCwgcG9zaXRpb24pID0+IHtcbiAgY29uc3QgYmFzZUFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjb25zdCB3cmFwcGVyQW5pbWF0aW9uID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gIGNvbnN0IHJvb3QgPSBnZXRFbGVtZW50Um9vdChiYXNlRWwpO1xuICBjb25zdCB3cmFwcGVyRWwgPSByb290LnF1ZXJ5U2VsZWN0b3IoJy50b2FzdC13cmFwcGVyJyk7XG4gIGNvbnN0IGJvdHRvbSA9IGBjYWxjKC0xMHB4IC0gdmFyKC0taW9uLXNhZmUtYXJlYS1ib3R0b20sIDBweCkpYDtcbiAgY29uc3QgdG9wID0gYGNhbGMoMTBweCArIHZhcigtLWlvbi1zYWZlLWFyZWEtdG9wLCAwcHgpKWA7XG4gIHdyYXBwZXJBbmltYXRpb24uYWRkRWxlbWVudCh3cmFwcGVyRWwpO1xuICBzd2l0Y2ggKHBvc2l0aW9uKSB7XG4gICAgY2FzZSAndG9wJzpcbiAgICAgIHdyYXBwZXJBbmltYXRpb24uZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWSgke3RvcH0pYCwgJ3RyYW5zbGF0ZVkoLTEwMCUpJyk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdtaWRkbGUnOlxuICAgICAgd3JhcHBlckFuaW1hdGlvbi5mcm9tVG8oJ29wYWNpdHknLCAwLjk5LCAwKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB3cmFwcGVyQW5pbWF0aW9uLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVkoJHtib3R0b219KWAsICd0cmFuc2xhdGVZKDEwMCUpJyk7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gYmFzZUFuaW1hdGlvbi5lYXNpbmcoJ2N1YmljLWJlemllciguMzYsLjY2LC4wNCwxKScpLmR1cmF0aW9uKDMwMCkuYWRkQW5pbWF0aW9uKHdyYXBwZXJBbmltYXRpb24pO1xufTtcblxuLyoqXG4gKiBNRCBUb2FzdCBFbnRlciBBbmltYXRpb25cbiAqL1xuY29uc3QgbWRFbnRlckFuaW1hdGlvbiA9IChiYXNlRWwsIHBvc2l0aW9uKSA9PiB7XG4gIGNvbnN0IGJhc2VBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgY29uc3Qgd3JhcHBlckFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjb25zdCByb290ID0gZ2V0RWxlbWVudFJvb3QoYmFzZUVsKTtcbiAgY29uc3Qgd3JhcHBlckVsID0gcm9vdC5xdWVyeVNlbGVjdG9yKCcudG9hc3Qtd3JhcHBlcicpO1xuICBjb25zdCBib3R0b20gPSBgY2FsYyg4cHggKyB2YXIoLS1pb24tc2FmZS1hcmVhLWJvdHRvbSwgMHB4KSlgO1xuICBjb25zdCB0b3AgPSBgY2FsYyg4cHggKyB2YXIoLS1pb24tc2FmZS1hcmVhLXRvcCwgMHB4KSlgO1xuICB3cmFwcGVyQW5pbWF0aW9uLmFkZEVsZW1lbnQod3JhcHBlckVsKTtcbiAgc3dpdGNoIChwb3NpdGlvbikge1xuICAgIGNhc2UgJ3RvcCc6XG4gICAgICB3cmFwcGVyRWwuc3R5bGUudG9wID0gdG9wO1xuICAgICAgd3JhcHBlckFuaW1hdGlvbi5mcm9tVG8oJ29wYWNpdHknLCAwLjAxLCAxKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ21pZGRsZSc6XG4gICAgICBjb25zdCB0b3BQb3NpdGlvbiA9IE1hdGguZmxvb3IoYmFzZUVsLmNsaWVudEhlaWdodCAvIDIgLSB3cmFwcGVyRWwuY2xpZW50SGVpZ2h0IC8gMik7XG4gICAgICB3cmFwcGVyRWwuc3R5bGUudG9wID0gYCR7dG9wUG9zaXRpb259cHhgO1xuICAgICAgd3JhcHBlckFuaW1hdGlvbi5mcm9tVG8oJ29wYWNpdHknLCAwLjAxLCAxKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB3cmFwcGVyRWwuc3R5bGUuYm90dG9tID0gYm90dG9tO1xuICAgICAgd3JhcHBlckFuaW1hdGlvbi5mcm9tVG8oJ29wYWNpdHknLCAwLjAxLCAxKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBiYXNlQW5pbWF0aW9uLmVhc2luZygnY3ViaWMtYmV6aWVyKC4zNiwuNjYsLjA0LDEpJykuZHVyYXRpb24oNDAwKS5hZGRBbmltYXRpb24od3JhcHBlckFuaW1hdGlvbik7XG59O1xuXG4vKipcbiAqIG1kIFRvYXN0IExlYXZlIEFuaW1hdGlvblxuICovXG5jb25zdCBtZExlYXZlQW5pbWF0aW9uID0gKGJhc2VFbCkgPT4ge1xuICBjb25zdCBiYXNlQW5pbWF0aW9uID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gIGNvbnN0IHdyYXBwZXJBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgY29uc3Qgcm9vdCA9IGdldEVsZW1lbnRSb290KGJhc2VFbCk7XG4gIGNvbnN0IHdyYXBwZXJFbCA9IHJvb3QucXVlcnlTZWxlY3RvcignLnRvYXN0LXdyYXBwZXInKTtcbiAgd3JhcHBlckFuaW1hdGlvbi5hZGRFbGVtZW50KHdyYXBwZXJFbCkuZnJvbVRvKCdvcGFjaXR5JywgMC45OSwgMCk7XG4gIHJldHVybiBiYXNlQW5pbWF0aW9uLmVhc2luZygnY3ViaWMtYmV6aWVyKC4zNiwuNjYsLjA0LDEpJykuZHVyYXRpb24oMzAwKS5hZGRBbmltYXRpb24od3JhcHBlckFuaW1hdGlvbik7XG59O1xuXG5jb25zdCB0b2FzdElvc0NzcyA9IFwiOmhvc3R7LS1ib3JkZXItd2lkdGg6MDstLWJvcmRlci1zdHlsZTpub25lOy0tYm9yZGVyLWNvbG9yOmluaXRpYWw7LS1ib3gtc2hhZG93Om5vbmU7LS1taW4td2lkdGg6YXV0bzstLXdpZHRoOmF1dG87LS1taW4taGVpZ2h0OmF1dG87LS1oZWlnaHQ6YXV0bzstLW1heC1oZWlnaHQ6YXV0bzstLXdoaXRlLXNwYWNlOm5vcm1hbDtsZWZ0OjA7dG9wOjA7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO291dGxpbmU6bm9uZTtjb2xvcjp2YXIoLS1jb2xvcik7Zm9udC1mYW1pbHk6dmFyKC0taW9uLWZvbnQtZmFtaWx5LCBpbmhlcml0KTtjb250YWluOnN0cmljdDt6LWluZGV4OjEwMDE7cG9pbnRlci1ldmVudHM6bm9uZX06aG9zdC1jb250ZXh0KFtkaXI9cnRsXSl7bGVmdDp1bnNldDtyaWdodDp1bnNldDtyaWdodDowfTpob3N0KC5vdmVybGF5LWhpZGRlbil7ZGlzcGxheTpub25lfTpob3N0KC5pb24tY29sb3Ipey0tYnV0dG9uLWNvbG9yOmluaGVyaXQ7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0KX06aG9zdCguaW9uLWNvbG9yKSAudG9hc3QtYnV0dG9uLWNhbmNlbHtjb2xvcjppbmhlcml0fTpob3N0KC5pb24tY29sb3IpIC50b2FzdC13cmFwcGVye2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpfS50b2FzdC13cmFwcGVye2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7bGVmdDp2YXIoLS1zdGFydCk7cmlnaHQ6dmFyKC0tZW5kKTt3aWR0aDp2YXIoLS13aWR0aCk7bWluLXdpZHRoOnZhcigtLW1pbi13aWR0aCk7bWF4LXdpZHRoOnZhcigtLW1heC13aWR0aCk7aGVpZ2h0OnZhcigtLWhlaWdodCk7bWluLWhlaWdodDp2YXIoLS1taW4taGVpZ2h0KTttYXgtaGVpZ2h0OnZhcigtLW1heC1oZWlnaHQpO2JvcmRlci13aWR0aDp2YXIoLS1ib3JkZXItd2lkdGgpO2JvcmRlci1zdHlsZTp2YXIoLS1ib3JkZXItc3R5bGUpO2JvcmRlci1jb2xvcjp2YXIoLS1ib3JkZXItY29sb3IpO2JhY2tncm91bmQ6dmFyKC0tYmFja2dyb3VuZCk7LXdlYmtpdC1ib3gtc2hhZG93OnZhcigtLWJveC1zaGFkb3cpO2JveC1zaGFkb3c6dmFyKC0tYm94LXNoYWRvdyl9W2Rpcj1ydGxdIC50b2FzdC13cmFwcGVyLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAudG9hc3Qtd3JhcHBlcntsZWZ0OnVuc2V0O3JpZ2h0OnVuc2V0O2xlZnQ6dmFyKC0tZW5kKTtyaWdodDp2YXIoLS1zdGFydCl9LnRvYXN0LWNvbnRhaW5lcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BvaW50ZXItZXZlbnRzOmF1dG87aGVpZ2h0OmluaGVyaXQ7bWluLWhlaWdodDppbmhlcml0O21heC1oZWlnaHQ6aW5oZXJpdDtjb250YWluOmNvbnRlbnR9LnRvYXN0LWNvbnRlbnR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXg6MTtmbGV4OjE7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0udG9hc3QtaWNvbnttYXJnaW4tbGVmdDoxNnB4fUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnRvYXN0LWljb257bWFyZ2luLWxlZnQ6dW5zZXQ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MTZweDttYXJnaW4taW5saW5lLXN0YXJ0OjE2cHh9fS50b2FzdC1tZXNzYWdley1tcy1mbGV4OjE7ZmxleDoxO3doaXRlLXNwYWNlOnZhcigtLXdoaXRlLXNwYWNlKX0udG9hc3QtYnV0dG9uLWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4fS50b2FzdC1idXR0b257Ym9yZGVyOjA7b3V0bGluZTpub25lO2NvbG9yOnZhcigtLWJ1dHRvbi1jb2xvcik7ei1pbmRleDowfS50b2FzdC1pY29uLC50b2FzdC1idXR0b24taWNvbntmb250LXNpemU6MS40ZW19LnRvYXN0LWJ1dHRvbi1pbm5lcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfUBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcil7LnRvYXN0LWJ1dHRvbjpob3ZlcntjdXJzb3I6cG9pbnRlcn19Omhvc3R7LS1iYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1zdGVwLTUwLCAjZjJmMmYyKTstLWJvcmRlci1yYWRpdXM6MTRweDstLWJ1dHRvbi1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC04NTAsICMyNjI2MjYpOy0tbWF4LXdpZHRoOjcwMHB4Oy0tc3RhcnQ6MTBweDstLWVuZDoxMHB4O2ZvbnQtc2l6ZToxNHB4fS50b2FzdC13cmFwcGVye21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87bWFyZ2luLXRvcDphdXRvO21hcmdpbi1ib3R0b206YXV0bztkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTB9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXsudG9hc3Qtd3JhcHBlcnttYXJnaW4tbGVmdDp1bnNldDttYXJnaW4tcmlnaHQ6dW5zZXQ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6YXV0bzttYXJnaW4taW5saW5lLXN0YXJ0OmF1dG87LXdlYmtpdC1tYXJnaW4tZW5kOmF1dG87bWFyZ2luLWlubGluZS1lbmQ6YXV0b319QHN1cHBvcnRzICgoLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMCkpIG9yIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMCkpKXs6aG9zdCgudG9hc3QtdHJhbnNsdWNlbnQpIC50b2FzdC13cmFwcGVye2JhY2tncm91bmQ6cmdiYSh2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvci1yZ2IsIDI1NSwgMjU1LCAyNTUpLCAwLjgpOy13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOnNhdHVyYXRlKDE4MCUpIGJsdXIoMjBweCk7YmFja2Ryb3AtZmlsdGVyOnNhdHVyYXRlKDE4MCUpIGJsdXIoMjBweCl9fS50b2FzdC13cmFwcGVyLnRvYXN0LXRvcHstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAgLTEwMCUsICAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIC0xMDAlLCAgMCk7dG9wOjB9LnRvYXN0LXdyYXBwZXIudG9hc3QtbWlkZGxle29wYWNpdHk6MC4wMX0udG9hc3Qtd3JhcHBlci50b2FzdC1ib3R0b217LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIDEwMCUsICAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIDEwMCUsICAwKTtib3R0b206MH0udG9hc3QtY29udGVudHtwYWRkaW5nLWxlZnQ6MTVweDtwYWRkaW5nLXJpZ2h0OjE1cHg7cGFkZGluZy10b3A6MTVweDtwYWRkaW5nLWJvdHRvbToxNXB4fUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnRvYXN0LWNvbnRlbnR7cGFkZGluZy1sZWZ0OnVuc2V0O3BhZGRpbmctcmlnaHQ6dW5zZXQ7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjE1cHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MTVweDstd2Via2l0LXBhZGRpbmctZW5kOjE1cHg7cGFkZGluZy1pbmxpbmUtZW5kOjE1cHh9fS50b2FzdC1oZWFkZXJ7bWFyZ2luLWJvdHRvbToycHg7Zm9udC13ZWlnaHQ6NTAwfS50b2FzdC1idXR0b257cGFkZGluZy1sZWZ0OjE1cHg7cGFkZGluZy1yaWdodDoxNXB4O3BhZGRpbmctdG9wOjEwcHg7cGFkZGluZy1ib3R0b206MTBweDtoZWlnaHQ6NDRweDstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciwgb3BhY2l0eSAxMDBtcyBsaW5lYXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yLCBvcGFjaXR5IDEwMG1zIGxpbmVhcjtib3JkZXI6MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2ZvbnQtZmFtaWx5OnZhcigtLWlvbi1mb250LWZhbWlseSk7Zm9udC1zaXplOjE3cHg7Zm9udC13ZWlnaHQ6NTAwO292ZXJmbG93OmhpZGRlbn1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey50b2FzdC1idXR0b257cGFkZGluZy1sZWZ0OnVuc2V0O3BhZGRpbmctcmlnaHQ6dW5zZXQ7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjE1cHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MTVweDstd2Via2l0LXBhZGRpbmctZW5kOjE1cHg7cGFkZGluZy1pbmxpbmUtZW5kOjE1cHh9fS50b2FzdC1idXR0b24uaW9uLWFjdGl2YXRlZHtvcGFjaXR5OjAuNH1AbWVkaWEgKGFueS1ob3ZlcjogaG92ZXIpey50b2FzdC1idXR0b246aG92ZXJ7b3BhY2l0eTowLjZ9fVwiO1xuXG5jb25zdCB0b2FzdE1kQ3NzID0gXCI6aG9zdHstLWJvcmRlci13aWR0aDowOy0tYm9yZGVyLXN0eWxlOm5vbmU7LS1ib3JkZXItY29sb3I6aW5pdGlhbDstLWJveC1zaGFkb3c6bm9uZTstLW1pbi13aWR0aDphdXRvOy0td2lkdGg6YXV0bzstLW1pbi1oZWlnaHQ6YXV0bzstLWhlaWdodDphdXRvOy0tbWF4LWhlaWdodDphdXRvOy0td2hpdGUtc3BhY2U6bm9ybWFsO2xlZnQ6MDt0b3A6MDtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7b3V0bGluZTpub25lO2NvbG9yOnZhcigtLWNvbG9yKTtmb250LWZhbWlseTp2YXIoLS1pb24tZm9udC1mYW1pbHksIGluaGVyaXQpO2NvbnRhaW46c3RyaWN0O3otaW5kZXg6MTAwMTtwb2ludGVyLWV2ZW50czpub25lfTpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKXtsZWZ0OnVuc2V0O3JpZ2h0OnVuc2V0O3JpZ2h0OjB9Omhvc3QoLm92ZXJsYXktaGlkZGVuKXtkaXNwbGF5Om5vbmV9Omhvc3QoLmlvbi1jb2xvcil7LS1idXR0b24tY29sb3I6aW5oZXJpdDtjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QpfTpob3N0KC5pb24tY29sb3IpIC50b2FzdC1idXR0b24tY2FuY2Vse2NvbG9yOmluaGVyaXR9Omhvc3QoLmlvbi1jb2xvcikgLnRvYXN0LXdyYXBwZXJ7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSl9LnRvYXN0LXdyYXBwZXJ7Ym9yZGVyLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzKTtsZWZ0OnZhcigtLXN0YXJ0KTtyaWdodDp2YXIoLS1lbmQpO3dpZHRoOnZhcigtLXdpZHRoKTttaW4td2lkdGg6dmFyKC0tbWluLXdpZHRoKTttYXgtd2lkdGg6dmFyKC0tbWF4LXdpZHRoKTtoZWlnaHQ6dmFyKC0taGVpZ2h0KTttaW4taGVpZ2h0OnZhcigtLW1pbi1oZWlnaHQpO21heC1oZWlnaHQ6dmFyKC0tbWF4LWhlaWdodCk7Ym9yZGVyLXdpZHRoOnZhcigtLWJvcmRlci13aWR0aCk7Ym9yZGVyLXN0eWxlOnZhcigtLWJvcmRlci1zdHlsZSk7Ym9yZGVyLWNvbG9yOnZhcigtLWJvcmRlci1jb2xvcik7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kKTstd2Via2l0LWJveC1zaGFkb3c6dmFyKC0tYm94LXNoYWRvdyk7Ym94LXNoYWRvdzp2YXIoLS1ib3gtc2hhZG93KX1bZGlyPXJ0bF0gLnRvYXN0LXdyYXBwZXIsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC50b2FzdC13cmFwcGVye2xlZnQ6dW5zZXQ7cmlnaHQ6dW5zZXQ7bGVmdDp2YXIoLS1lbmQpO3JpZ2h0OnZhcigtLXN0YXJ0KX0udG9hc3QtY29udGFpbmVye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cG9pbnRlci1ldmVudHM6YXV0bztoZWlnaHQ6aW5oZXJpdDttaW4taGVpZ2h0OmluaGVyaXQ7bWF4LWhlaWdodDppbmhlcml0O2NvbnRhaW46Y29udGVudH0udG9hc3QtY29udGVudHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleDoxO2ZsZXg6MTstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS50b2FzdC1pY29ue21hcmdpbi1sZWZ0OjE2cHh9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXsudG9hc3QtaWNvbnttYXJnaW4tbGVmdDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDoxNnB4O21hcmdpbi1pbmxpbmUtc3RhcnQ6MTZweH19LnRvYXN0LW1lc3NhZ2V7LW1zLWZsZXg6MTtmbGV4OjE7d2hpdGUtc3BhY2U6dmFyKC0td2hpdGUtc3BhY2UpfS50b2FzdC1idXR0b24tZ3JvdXB7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LnRvYXN0LWJ1dHRvbntib3JkZXI6MDtvdXRsaW5lOm5vbmU7Y29sb3I6dmFyKC0tYnV0dG9uLWNvbG9yKTt6LWluZGV4OjB9LnRvYXN0LWljb24sLnRvYXN0LWJ1dHRvbi1pY29ue2ZvbnQtc2l6ZToxLjRlbX0udG9hc3QtYnV0dG9uLWlubmVye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9QG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKXsudG9hc3QtYnV0dG9uOmhvdmVye2N1cnNvcjpwb2ludGVyfX06aG9zdHstLWJhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLXN0ZXAtODAwLCAjMzMzMzMzKTstLWJvcmRlci1yYWRpdXM6NHB4Oy0tYm94LXNoYWRvdzowIDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAxOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTstLWJ1dHRvbi1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1jb2xvcjp2YXIoLS1pb24tY29sb3Itc3RlcC01MCwgI2YyZjJmMik7LS1tYXgtd2lkdGg6NzAwcHg7LS1zdGFydDo4cHg7LS1lbmQ6OHB4O2ZvbnQtc2l6ZToxNHB4fS50b2FzdC13cmFwcGVye21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87bWFyZ2luLXRvcDphdXRvO21hcmdpbi1ib3R0b206YXV0bztkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO29wYWNpdHk6MC4wMTt6LWluZGV4OjEwfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnRvYXN0LXdyYXBwZXJ7bWFyZ2luLWxlZnQ6dW5zZXQ7bWFyZ2luLXJpZ2h0OnVuc2V0Oy13ZWJraXQtbWFyZ2luLXN0YXJ0OmF1dG87bWFyZ2luLWlubGluZS1zdGFydDphdXRvOy13ZWJraXQtbWFyZ2luLWVuZDphdXRvO21hcmdpbi1pbmxpbmUtZW5kOmF1dG99fS50b2FzdC1jb250ZW50e3BhZGRpbmctbGVmdDoxNnB4O3BhZGRpbmctcmlnaHQ6MTZweDtwYWRkaW5nLXRvcDoxNHB4O3BhZGRpbmctYm90dG9tOjE0cHh9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXsudG9hc3QtY29udGVudHtwYWRkaW5nLWxlZnQ6dW5zZXQ7cGFkZGluZy1yaWdodDp1bnNldDstd2Via2l0LXBhZGRpbmctc3RhcnQ6MTZweDtwYWRkaW5nLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6MTZweDtwYWRkaW5nLWlubGluZS1lbmQ6MTZweH19LnRvYXN0LWhlYWRlcnttYXJnaW4tYm90dG9tOjJweDtmb250LXdlaWdodDo1MDA7bGluZS1oZWlnaHQ6MjBweH0udG9hc3QtbWVzc2FnZXtsaW5lLWhlaWdodDoyMHB4fS50b2FzdC1idXR0b24tZ3JvdXAtc3RhcnR7bWFyZ2luLWxlZnQ6OHB4fUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnRvYXN0LWJ1dHRvbi1ncm91cC1zdGFydHttYXJnaW4tbGVmdDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDo4cHg7bWFyZ2luLWlubGluZS1zdGFydDo4cHh9fS50b2FzdC1idXR0b24tZ3JvdXAtZW5ke21hcmdpbi1yaWdodDo4cHh9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXsudG9hc3QtYnV0dG9uLWdyb3VwLWVuZHttYXJnaW4tcmlnaHQ6dW5zZXQ7LXdlYmtpdC1tYXJnaW4tZW5kOjhweDttYXJnaW4taW5saW5lLWVuZDo4cHh9fS50b2FzdC1idXR0b257cGFkZGluZy1sZWZ0OjE1cHg7cGFkZGluZy1yaWdodDoxNXB4O3BhZGRpbmctdG9wOjEwcHg7cGFkZGluZy1ib3R0b206MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2ZvbnQtZmFtaWx5OnZhcigtLWlvbi1mb250LWZhbWlseSk7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NTAwO2xldHRlci1zcGFjaW5nOjAuODRweDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7b3ZlcmZsb3c6aGlkZGVufUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnRvYXN0LWJ1dHRvbntwYWRkaW5nLWxlZnQ6dW5zZXQ7cGFkZGluZy1yaWdodDp1bnNldDstd2Via2l0LXBhZGRpbmctc3RhcnQ6MTVweDtwYWRkaW5nLWlubGluZS1zdGFydDoxNXB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6MTVweDtwYWRkaW5nLWlubGluZS1lbmQ6MTVweH19LnRvYXN0LWJ1dHRvbi1jYW5jZWx7Y29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtMTAwLCAjZTZlNmU2KX0udG9hc3QtYnV0dG9uLWljb24tb25seXtib3JkZXItcmFkaXVzOjUwJTtwYWRkaW5nLWxlZnQ6OXB4O3BhZGRpbmctcmlnaHQ6OXB4O3BhZGRpbmctdG9wOjlweDtwYWRkaW5nLWJvdHRvbTo5cHg7d2lkdGg6MzZweDtoZWlnaHQ6MzZweH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey50b2FzdC1idXR0b24taWNvbi1vbmx5e3BhZGRpbmctbGVmdDp1bnNldDtwYWRkaW5nLXJpZ2h0OnVuc2V0Oy13ZWJraXQtcGFkZGluZy1zdGFydDo5cHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6OXB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6OXB4O3BhZGRpbmctaW5saW5lLWVuZDo5cHh9fUBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcil7LnRvYXN0LWJ1dHRvbjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLCA1NiwgMTI4LCAyNTUpLCAwLjA4KX0udG9hc3QtYnV0dG9uLWNhbmNlbDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEodmFyKC0taW9uLWJhY2tncm91bmQtY29sb3ItcmdiLCAyNTUsIDI1NSwgMjU1KSwgMC4wOCl9fVwiO1xuXG5jb25zdCBUb2FzdCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgdGhpcy5kaWRQcmVzZW50ID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25Ub2FzdERpZFByZXNlbnRcIiwgNyk7XG4gICAgdGhpcy53aWxsUHJlc2VudCA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uVG9hc3RXaWxsUHJlc2VudFwiLCA3KTtcbiAgICB0aGlzLndpbGxEaXNtaXNzID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25Ub2FzdFdpbGxEaXNtaXNzXCIsIDcpO1xuICAgIHRoaXMuZGlkRGlzbWlzcyA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uVG9hc3REaWREaXNtaXNzXCIsIDcpO1xuICAgIHRoaXMucHJlc2VudGVkID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogSG93IG1hbnkgbWlsbGlzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIGhpZGluZyB0aGUgdG9hc3QuIEJ5IGRlZmF1bHQsIGl0IHdpbGwgc2hvd1xuICAgICAqIHVudGlsIGBkaXNtaXNzKClgIGlzIGNhbGxlZC5cbiAgICAgKi9cbiAgICB0aGlzLmR1cmF0aW9uID0gMDtcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIHRoZSBrZXlib2FyZCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgZGlzbWlzc2VkIHdoZW4gdGhlIG92ZXJsYXkgaXMgcHJlc2VudGVkLlxuICAgICAqL1xuICAgIHRoaXMua2V5Ym9hcmRDbG9zZSA9IGZhbHNlO1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgdG9hc3Qgb24gdGhlIHNjcmVlbi5cbiAgICAgKi9cbiAgICB0aGlzLnBvc2l0aW9uID0gJ2JvdHRvbSc7XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCB0aGUgdG9hc3Qgd2lsbCBiZSB0cmFuc2x1Y2VudC5cbiAgICAgKiBPbmx5IGFwcGxpZXMgd2hlbiB0aGUgbW9kZSBpcyBgXCJpb3NcImAgYW5kIHRoZSBkZXZpY2Ugc3VwcG9ydHNcbiAgICAgKiBbYGJhY2tkcm9wLWZpbHRlcmBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZHJvcC1maWx0ZXIjQnJvd3Nlcl9jb21wYXRpYmlsaXR5KS5cbiAgICAgKi9cbiAgICB0aGlzLnRyYW5zbHVjZW50ID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCB0aGUgdG9hc3Qgd2lsbCBhbmltYXRlLlxuICAgICAqL1xuICAgIHRoaXMuYW5pbWF0ZWQgPSB0cnVlO1xuICAgIHRoaXMuZGlzcGF0Y2hDYW5jZWxIYW5kbGVyID0gKGV2KSA9PiB7XG4gICAgICBjb25zdCByb2xlID0gZXYuZGV0YWlsLnJvbGU7XG4gICAgICBpZiAoaXNDYW5jZWwocm9sZSkpIHtcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gdGhpcy5nZXRCdXR0b25zKCkuZmluZCgoYikgPT4gYi5yb2xlID09PSAnY2FuY2VsJyk7XG4gICAgICAgIHRoaXMuY2FsbEJ1dHRvbkhhbmRsZXIoY2FuY2VsQnV0dG9uKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHByZXBhcmVPdmVybGF5KHRoaXMuZWwpO1xuICB9XG4gIC8qKlxuICAgKiBQcmVzZW50IHRoZSB0b2FzdCBvdmVybGF5IGFmdGVyIGl0IGhhcyBiZWVuIGNyZWF0ZWQuXG4gICAqL1xuICBhc3luYyBwcmVzZW50KCkge1xuICAgIGF3YWl0IHByZXNlbnQodGhpcywgJ3RvYXN0RW50ZXInLCBpb3NFbnRlckFuaW1hdGlvbiwgbWRFbnRlckFuaW1hdGlvbiwgdGhpcy5wb3NpdGlvbik7XG4gICAgaWYgKHRoaXMuZHVyYXRpb24gPiAwKSB7XG4gICAgICB0aGlzLmR1cmF0aW9uVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gdGhpcy5kaXNtaXNzKHVuZGVmaW5lZCwgJ3RpbWVvdXQnKSwgdGhpcy5kdXJhdGlvbik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBEaXNtaXNzIHRoZSB0b2FzdCBvdmVybGF5IGFmdGVyIGl0IGhhcyBiZWVuIHByZXNlbnRlZC5cbiAgICpcbiAgICogQHBhcmFtIGRhdGEgQW55IGRhdGEgdG8gZW1pdCBpbiB0aGUgZGlzbWlzcyBldmVudHMuXG4gICAqIEBwYXJhbSByb2xlIFRoZSByb2xlIG9mIHRoZSBlbGVtZW50IHRoYXQgaXMgZGlzbWlzc2luZyB0aGUgdG9hc3QuXG4gICAqIFRoaXMgY2FuIGJlIHVzZWZ1bCBpbiBhIGJ1dHRvbiBoYW5kbGVyIGZvciBkZXRlcm1pbmluZyB3aGljaCBidXR0b24gd2FzXG4gICAqIGNsaWNrZWQgdG8gZGlzbWlzcyB0aGUgdG9hc3QuXG4gICAqIFNvbWUgZXhhbXBsZXMgaW5jbHVkZTogYGBcImNhbmNlbFwiYCwgYFwiZGVzdHJ1Y3RpdmVcImAsIFwic2VsZWN0ZWRcImAsIGFuZCBgXCJiYWNrZHJvcFwiYC5cbiAgICovXG4gIGRpc21pc3MoZGF0YSwgcm9sZSkge1xuICAgIGlmICh0aGlzLmR1cmF0aW9uVGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZHVyYXRpb25UaW1lb3V0KTtcbiAgICB9XG4gICAgcmV0dXJuIGRpc21pc3ModGhpcywgZGF0YSwgcm9sZSwgJ3RvYXN0TGVhdmUnLCBpb3NMZWF2ZUFuaW1hdGlvbiwgbWRMZWF2ZUFuaW1hdGlvbiwgdGhpcy5wb3NpdGlvbik7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgdG9hc3QgZGlkIGRpc21pc3MuXG4gICAqL1xuICBvbkRpZERpc21pc3MoKSB7XG4gICAgcmV0dXJuIGV2ZW50TWV0aG9kKHRoaXMuZWwsICdpb25Ub2FzdERpZERpc21pc3MnKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSB0b2FzdCB3aWxsIGRpc21pc3MuXG4gICAqL1xuICBvbldpbGxEaXNtaXNzKCkge1xuICAgIHJldHVybiBldmVudE1ldGhvZCh0aGlzLmVsLCAnaW9uVG9hc3RXaWxsRGlzbWlzcycpO1xuICB9XG4gIGdldEJ1dHRvbnMoKSB7XG4gICAgY29uc3QgYnV0dG9ucyA9IHRoaXMuYnV0dG9uc1xuICAgICAgPyB0aGlzLmJ1dHRvbnMubWFwKChiKSA9PiB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgYiA9PT0gJ3N0cmluZycgPyB7IHRleHQ6IGIgfSA6IGI7XG4gICAgICB9KVxuICAgICAgOiBbXTtcbiAgICByZXR1cm4gYnV0dG9ucztcbiAgfVxuICBhc3luYyBidXR0b25DbGljayhidXR0b24pIHtcbiAgICBjb25zdCByb2xlID0gYnV0dG9uLnJvbGU7XG4gICAgaWYgKGlzQ2FuY2VsKHJvbGUpKSB7XG4gICAgICByZXR1cm4gdGhpcy5kaXNtaXNzKHVuZGVmaW5lZCwgcm9sZSk7XG4gICAgfVxuICAgIGNvbnN0IHNob3VsZERpc21pc3MgPSBhd2FpdCB0aGlzLmNhbGxCdXR0b25IYW5kbGVyKGJ1dHRvbik7XG4gICAgaWYgKHNob3VsZERpc21pc3MpIHtcbiAgICAgIHJldHVybiB0aGlzLmRpc21pc3ModW5kZWZpbmVkLCByb2xlKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG4gIGFzeW5jIGNhbGxCdXR0b25IYW5kbGVyKGJ1dHRvbikge1xuICAgIGlmIChidXR0b24gPT09IG51bGwgfHwgYnV0dG9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBidXR0b24uaGFuZGxlcikge1xuICAgICAgLy8gYSBoYW5kbGVyIGhhcyBiZWVuIHByb3ZpZGVkLCBleGVjdXRlIGl0XG4gICAgICAvLyBwYXNzIHRoZSBoYW5kbGVyIHRoZSB2YWx1ZXMgZnJvbSB0aGUgaW5wdXRzXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBydG4gPSBhd2FpdCBzYWZlQ2FsbChidXR0b24uaGFuZGxlcik7XG4gICAgICAgIGlmIChydG4gPT09IGZhbHNlKSB7XG4gICAgICAgICAgLy8gaWYgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgaGFuZGxlciBpcyBmYWxzZSB0aGVuIGRvIG5vdCBkaXNtaXNzXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZW5kZXJCdXR0b25zKGJ1dHRvbnMsIHNpZGUpIHtcbiAgICBpZiAoYnV0dG9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbW9kZSA9IGdldElvbk1vZGUodGhpcyk7XG4gICAgY29uc3QgYnV0dG9uR3JvdXBzQ2xhc3NlcyA9IHtcbiAgICAgICd0b2FzdC1idXR0b24tZ3JvdXAnOiB0cnVlLFxuICAgICAgW2B0b2FzdC1idXR0b24tZ3JvdXAtJHtzaWRlfWBdOiB0cnVlLFxuICAgIH07XG4gICAgcmV0dXJuIChoKFwiZGl2XCIsIHsgY2xhc3M6IGJ1dHRvbkdyb3Vwc0NsYXNzZXMgfSwgYnV0dG9ucy5tYXAoKGIpID0+IChoKFwiYnV0dG9uXCIsIHsgdHlwZTogXCJidXR0b25cIiwgY2xhc3M6IGJ1dHRvbkNsYXNzKGIpLCB0YWJJbmRleDogMCwgb25DbGljazogKCkgPT4gdGhpcy5idXR0b25DbGljayhiKSwgcGFydDogXCJidXR0b25cIiB9LCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwidG9hc3QtYnV0dG9uLWlubmVyXCIgfSwgYi5pY29uICYmIChoKFwiaW9uLWljb25cIiwgeyBpY29uOiBiLmljb24sIHNsb3Q6IGIudGV4dCA9PT0gdW5kZWZpbmVkID8gJ2ljb24tb25seScgOiB1bmRlZmluZWQsIGNsYXNzOiBcInRvYXN0LWJ1dHRvbi1pY29uXCIgfSkpLCBiLnRleHQpLCBtb2RlID09PSAnbWQnICYmIChoKFwiaW9uLXJpcHBsZS1lZmZlY3RcIiwgeyB0eXBlOiBiLmljb24gIT09IHVuZGVmaW5lZCAmJiBiLnRleHQgPT09IHVuZGVmaW5lZCA/ICd1bmJvdW5kZWQnIDogJ2JvdW5kZWQnIH0pKSkpKSkpO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBhbGxCdXR0b25zID0gdGhpcy5nZXRCdXR0b25zKCk7XG4gICAgY29uc3Qgc3RhcnRCdXR0b25zID0gYWxsQnV0dG9ucy5maWx0ZXIoKGIpID0+IGIuc2lkZSA9PT0gJ3N0YXJ0Jyk7XG4gICAgY29uc3QgZW5kQnV0dG9ucyA9IGFsbEJ1dHRvbnMuZmlsdGVyKChiKSA9PiBiLnNpZGUgIT09ICdzdGFydCcpO1xuICAgIGNvbnN0IG1vZGUgPSBnZXRJb25Nb2RlKHRoaXMpO1xuICAgIGNvbnN0IHdyYXBwZXJDbGFzcyA9IHtcbiAgICAgICd0b2FzdC13cmFwcGVyJzogdHJ1ZSxcbiAgICAgIFtgdG9hc3QtJHt0aGlzLnBvc2l0aW9ufWBdOiB0cnVlLFxuICAgIH07XG4gICAgY29uc3Qgcm9sZSA9IGFsbEJ1dHRvbnMubGVuZ3RoID4gMCA/ICdkaWFsb2cnIDogJ3N0YXR1cyc7XG4gICAgcmV0dXJuIChoKEhvc3QsIE9iamVjdC5hc3NpZ24oeyBcImFyaWEtbGl2ZVwiOiBcInBvbGl0ZVwiLCBcImFyaWEtYXRvbWljXCI6IFwidHJ1ZVwiLCByb2xlOiByb2xlLCB0YWJpbmRleDogXCItMVwiIH0sIHRoaXMuaHRtbEF0dHJpYnV0ZXMsIHsgc3R5bGU6IHtcbiAgICAgICAgekluZGV4OiBgJHs2MDAwMCArIHRoaXMub3ZlcmxheUluZGV4fWAsXG4gICAgICB9LCBjbGFzczogY3JlYXRlQ29sb3JDbGFzc2VzKHRoaXMuY29sb3IsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IFttb2RlXTogdHJ1ZSB9LCBnZXRDbGFzc01hcCh0aGlzLmNzc0NsYXNzKSksIHsgJ292ZXJsYXktaGlkZGVuJzogdHJ1ZSwgJ3RvYXN0LXRyYW5zbHVjZW50JzogdGhpcy50cmFuc2x1Y2VudCB9KSksIG9uSW9uVG9hc3RXaWxsRGlzbWlzczogdGhpcy5kaXNwYXRjaENhbmNlbEhhbmRsZXIgfSksIGgoXCJkaXZcIiwgeyBjbGFzczogd3JhcHBlckNsYXNzIH0sIGgoXCJkaXZcIiwgeyBjbGFzczogXCJ0b2FzdC1jb250YWluZXJcIiwgcGFydDogXCJjb250YWluZXJcIiB9LCB0aGlzLnJlbmRlckJ1dHRvbnMoc3RhcnRCdXR0b25zLCAnc3RhcnQnKSwgdGhpcy5pY29uICE9PSB1bmRlZmluZWQgJiYgKGgoXCJpb24taWNvblwiLCB7IGNsYXNzOiBcInRvYXN0LWljb25cIiwgcGFydDogXCJpY29uXCIsIGljb246IHRoaXMuaWNvbiwgbGF6eTogZmFsc2UsIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSkpLCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwidG9hc3QtY29udGVudFwiIH0sIHRoaXMuaGVhZGVyICE9PSB1bmRlZmluZWQgJiYgKGgoXCJkaXZcIiwgeyBjbGFzczogXCJ0b2FzdC1oZWFkZXJcIiwgcGFydDogXCJoZWFkZXJcIiB9LCB0aGlzLmhlYWRlcikpLCB0aGlzLm1lc3NhZ2UgIT09IHVuZGVmaW5lZCAmJiAoaChcImRpdlwiLCB7IGNsYXNzOiBcInRvYXN0LW1lc3NhZ2VcIiwgcGFydDogXCJtZXNzYWdlXCIsIGlubmVySFRNTDogc2FuaXRpemVET01TdHJpbmcodGhpcy5tZXNzYWdlKSB9KSkpLCB0aGlzLnJlbmRlckJ1dHRvbnMoZW5kQnV0dG9ucywgJ2VuZCcpKSkpKTtcbiAgfVxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG59O1xuY29uc3QgYnV0dG9uQ2xhc3MgPSAoYnV0dG9uKSA9PiB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHsgJ3RvYXN0LWJ1dHRvbic6IHRydWUsICd0b2FzdC1idXR0b24taWNvbi1vbmx5JzogYnV0dG9uLmljb24gIT09IHVuZGVmaW5lZCAmJiBidXR0b24udGV4dCA9PT0gdW5kZWZpbmVkLCBbYHRvYXN0LWJ1dHRvbi0ke2J1dHRvbi5yb2xlfWBdOiBidXR0b24ucm9sZSAhPT0gdW5kZWZpbmVkLCAnaW9uLWZvY3VzYWJsZSc6IHRydWUsICdpb24tYWN0aXZhdGFibGUnOiB0cnVlIH0sIGdldENsYXNzTWFwKGJ1dHRvbi5jc3NDbGFzcykpO1xufTtcblRvYXN0LnN0eWxlID0ge1xuICBpb3M6IHRvYXN0SW9zQ3NzLFxuICBtZDogdG9hc3RNZENzc1xufTtcblxuZXhwb3J0IHsgVG9hc3QgYXMgaW9uX3RvYXN0IH07XG4iLCIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuY29uc3QgaG9zdENvbnRleHQgPSAoc2VsZWN0b3IsIGVsKSA9PiB7XG4gIHJldHVybiBlbC5jbG9zZXN0KHNlbGVjdG9yKSAhPT0gbnVsbDtcbn07XG4vKipcbiAqIENyZWF0ZSB0aGUgbW9kZSBhbmQgY29sb3IgY2xhc3NlcyBmb3IgdGhlIGNvbXBvbmVudCBiYXNlZCBvbiB0aGUgY2xhc3NlcyBwYXNzZWQgaW5cbiAqL1xuY29uc3QgY3JlYXRlQ29sb3JDbGFzc2VzID0gKGNvbG9yLCBjc3NDbGFzc01hcCkgPT4ge1xuICByZXR1cm4gdHlwZW9mIGNvbG9yID09PSAnc3RyaW5nJyAmJiBjb2xvci5sZW5ndGggPiAwXG4gICAgPyBPYmplY3QuYXNzaWduKHsgJ2lvbi1jb2xvcic6IHRydWUsIFtgaW9uLWNvbG9yLSR7Y29sb3J9YF06IHRydWUgfSwgY3NzQ2xhc3NNYXApIDogY3NzQ2xhc3NNYXA7XG59O1xuY29uc3QgZ2V0Q2xhc3NMaXN0ID0gKGNsYXNzZXMpID0+IHtcbiAgaWYgKGNsYXNzZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGFycmF5ID0gQXJyYXkuaXNBcnJheShjbGFzc2VzKSA/IGNsYXNzZXMgOiBjbGFzc2VzLnNwbGl0KCcgJyk7XG4gICAgcmV0dXJuIGFycmF5XG4gICAgICAuZmlsdGVyKChjKSA9PiBjICE9IG51bGwpXG4gICAgICAubWFwKChjKSA9PiBjLnRyaW0oKSlcbiAgICAgIC5maWx0ZXIoKGMpID0+IGMgIT09ICcnKTtcbiAgfVxuICByZXR1cm4gW107XG59O1xuY29uc3QgZ2V0Q2xhc3NNYXAgPSAoY2xhc3NlcykgPT4ge1xuICBjb25zdCBtYXAgPSB7fTtcbiAgZ2V0Q2xhc3NMaXN0KGNsYXNzZXMpLmZvckVhY2goKGMpID0+IChtYXBbY10gPSB0cnVlKSk7XG4gIHJldHVybiBtYXA7XG59O1xuY29uc3QgU0NIRU1FID0gL15bYS16XVthLXowLTkrXFwtLl0qOi87XG5jb25zdCBvcGVuVVJMID0gYXN5bmMgKHVybCwgZXYsIGRpcmVjdGlvbiwgYW5pbWF0aW9uKSA9PiB7XG4gIGlmICh1cmwgIT0gbnVsbCAmJiB1cmxbMF0gIT09ICcjJyAmJiAhU0NIRU1FLnRlc3QodXJsKSkge1xuICAgIGNvbnN0IHJvdXRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lvbi1yb3V0ZXInKTtcbiAgICBpZiAocm91dGVyKSB7XG4gICAgICBpZiAoZXYgIT0gbnVsbCkge1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHVybCwgZGlyZWN0aW9uLCBhbmltYXRpb24pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVDb2xvckNsYXNzZXMgYXMgYywgZ2V0Q2xhc3NNYXAgYXMgZywgaG9zdENvbnRleHQgYXMgaCwgb3BlblVSTCBhcyBvIH07XG4iXSwibmFtZXMiOlsiciIsInJlZ2lzdGVySW5zdGFuY2UiLCJlIiwiY3JlYXRlRXZlbnQiLCJoIiwiSCIsIkhvc3QiLCJpIiwiZ2V0RWxlbWVudCIsImIiLCJnZXRJb25Nb2RlIiwiaXNDYW5jZWwiLCJwcmVwYXJlT3ZlcmxheSIsImQiLCJwcmVzZW50IiwiZiIsImRpc21pc3MiLCJnIiwiZXZlbnRNZXRob2QiLCJzIiwic2FmZUNhbGwiLCJzYW5pdGl6ZURPTVN0cmluZyIsImdldENsYXNzTWFwIiwiYyIsImNyZWF0ZUNvbG9yQ2xhc3NlcyIsImNyZWF0ZUFuaW1hdGlvbiIsImdldEVsZW1lbnRSb290IiwiaW9zRW50ZXJBbmltYXRpb24iLCJiYXNlRWwiLCJwb3NpdGlvbiIsImJhc2VBbmltYXRpb24iLCJ3cmFwcGVyQW5pbWF0aW9uIiwicm9vdCIsIndyYXBwZXJFbCIsInF1ZXJ5U2VsZWN0b3IiLCJib3R0b20iLCJ0b3AiLCJhZGRFbGVtZW50IiwiZnJvbVRvIiwidG9wUG9zaXRpb24iLCJNYXRoIiwiZmxvb3IiLCJjbGllbnRIZWlnaHQiLCJzdHlsZSIsImVhc2luZyIsImR1cmF0aW9uIiwiYWRkQW5pbWF0aW9uIiwiaW9zTGVhdmVBbmltYXRpb24iLCJtZEVudGVyQW5pbWF0aW9uIiwibWRMZWF2ZUFuaW1hdGlvbiIsInRvYXN0SW9zQ3NzIiwidG9hc3RNZENzcyIsIlRvYXN0IiwiY29uc3RydWN0b3IiLCJob3N0UmVmIiwiZGlkUHJlc2VudCIsIndpbGxQcmVzZW50Iiwid2lsbERpc21pc3MiLCJkaWREaXNtaXNzIiwicHJlc2VudGVkIiwia2V5Ym9hcmRDbG9zZSIsInRyYW5zbHVjZW50IiwiYW5pbWF0ZWQiLCJkaXNwYXRjaENhbmNlbEhhbmRsZXIiLCJldiIsInJvbGUiLCJkZXRhaWwiLCJjYW5jZWxCdXR0b24iLCJnZXRCdXR0b25zIiwiZmluZCIsImNhbGxCdXR0b25IYW5kbGVyIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJlbCIsImR1cmF0aW9uVGltZW91dCIsInNldFRpbWVvdXQiLCJ1bmRlZmluZWQiLCJkYXRhIiwiY2xlYXJUaW1lb3V0Iiwib25EaWREaXNtaXNzIiwib25XaWxsRGlzbWlzcyIsImJ1dHRvbnMiLCJtYXAiLCJ0ZXh0IiwiYnV0dG9uQ2xpY2siLCJidXR0b24iLCJzaG91bGREaXNtaXNzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJoYW5kbGVyIiwicnRuIiwiY29uc29sZSIsImVycm9yIiwicmVuZGVyQnV0dG9ucyIsInNpZGUiLCJsZW5ndGgiLCJtb2RlIiwiYnV0dG9uR3JvdXBzQ2xhc3NlcyIsImNsYXNzIiwidHlwZSIsImJ1dHRvbkNsYXNzIiwidGFiSW5kZXgiLCJvbkNsaWNrIiwicGFydCIsImljb24iLCJzbG90IiwicmVuZGVyIiwiYWxsQnV0dG9ucyIsInN0YXJ0QnV0dG9ucyIsImZpbHRlciIsImVuZEJ1dHRvbnMiLCJ3cmFwcGVyQ2xhc3MiLCJPYmplY3QiLCJhc3NpZ24iLCJ0YWJpbmRleCIsImh0bWxBdHRyaWJ1dGVzIiwiekluZGV4Iiwib3ZlcmxheUluZGV4IiwiY29sb3IiLCJjc3NDbGFzcyIsIm9uSW9uVG9hc3RXaWxsRGlzbWlzcyIsImxhenkiLCJoZWFkZXIiLCJtZXNzYWdlIiwiaW5uZXJIVE1MIiwiaW9zIiwibWQiLCJpb25fdG9hc3QiLCJob3N0Q29udGV4dCIsInNlbGVjdG9yIiwiY2xvc2VzdCIsImNzc0NsYXNzTWFwIiwiZ2V0Q2xhc3NMaXN0IiwiY2xhc3NlcyIsImFycmF5IiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaXQiLCJ0cmltIiwiZm9yRWFjaCIsIlNDSEVNRSIsIm9wZW5VUkwiLCJ1cmwiLCJkaXJlY3Rpb24iLCJhbmltYXRpb24iLCJ0ZXN0Iiwicm91dGVyIiwiZG9jdW1lbnQiLCJwcmV2ZW50RGVmYXVsdCIsInB1c2giLCJvIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswLDFdfQ==